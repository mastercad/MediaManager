BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS `tags` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS `tag_x_file` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`file_fk`	INTEGER NOT NULL
);
CREATE TABLE IF NOT EXISTS `tag_x_collection` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`collection_fk`	INTEGER NOT NULL,
	FOREIGN KEY(`collection_fk`) REFERENCES `collections`(`id`) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS `state` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT UNIQUE
);
INSERT INTO `state` (id,name) VALUES (1,'NEW');
INSERT INTO `state` (id,name) VALUES (2,'DOWNLOAD_STARTED');
INSERT INTO `state` (id,name) VALUES (3,'DOWNLOAD_BROKEN');
INSERT INTO `state` (id,name) VALUES (4,'DOWNLOAD_FINISHED');
CREATE TABLE IF NOT EXISTS `settings` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`key`	TEXT NOT NULL UNIQUE,
	`value`	TEXT
);
CREATE TABLE IF NOT EXISTS `setting_x_file` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`file_fk`	INTEGER NOT NULL UNIQUE,
	FOREIGN KEY(`file_fk`) REFERENCES `file`(`id`) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS `setting_x_collection` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`collection_fk`	INTEGER NOT NULL UNIQUE,
	FOREIGN KEY(`collection_fk`) REFERENCES `collections`(`id`) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS `migrations` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`version`	INTEGER NOT NULL UNIQUE,
	`date_time`	TEXT NOT NULL UNIQUE
);
INSERT INTO `migrations` (id,version,date_time) VALUES (1,1,'2020-01-07 19:47:00');
CREATE TABLE IF NOT EXISTS `file` (
	`id`	INTEGER UNIQUE,
	`name`	TEXT,
	`path`	TEXT,
	`extension`	TEXT,
	`origin`	TEXT,
	`origin_url`	TEXT,
	`origin_id`	TEXT,
	`state`	INTEGER NOT NULL,
	`description`	TEXT,
	`preview_path`	TEXT,
	`ranking`	INTEGER,
	PRIMARY KEY(`id`),
	FOREIGN KEY(`state`) REFERENCES `state`(`id`) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS `collections` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS `collection_x_file` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`file_fk`	INTEGER NOT NULL,
	`collection_fk`	INTEGER NOT NULL,
	FOREIGN KEY(`file_fk`) REFERENCES `file`(`id`) ON DELETE CASCADE,
	FOREIGN KEY(`collection_fk`) REFERENCES `collections`(`id`) ON DELETE CASCADE
);
COMMIT;
